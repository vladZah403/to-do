{"version":3,"sources":["components/to-do-list-item/to-do-list-item.js","components/to-do-list-item/index.js","components/to-do-list/to-do-list.js","components/to-do-list/index.js","components/statistic/statistic.js","components/statistic/index.js","components/to-do-form/index.js","components/to-do-form/to-do-form.js","components/search-form/search-form.js","components/to-do-delete/to-do-delete.js","components/to-do-delete/index.js","components/app/index.js","components/app/app.js","index.js"],"names":["ToDoListItem","props","isDone","isImportant","text","onItemClick","id","onImportantClick","onDeleteItemClick","classN","className","type","onClick","ToDoList","data","map","task","key","Statistic","all","done","mark","onStatClick","filter","progress","width","Number","baseClass","doneClass","markClass","allClass","role","style","aria-valuenow","aria-valuemin","aria-valuemax","ToDoForm","state","input","onAddTask","onAddItem","setState","onInputChange","ev","target","value","placeholder","aria-label","onChange","this","Component","SearchForm","onSearchInput","aria-describedby","ToDoDelete","onDeleteClick","App","maxId","todos","visible","search","db","todos2","forEach","el","dbUpdate","console","log","item","genereteItem","unshift","dbAdd","dbDelete","dbDeleteAll","dbFirstInit","dbRead","trans","onsuccess","result","reduce","max","dbOperation","window","indexedDB","open","onupgradeneeded","createObjectStore","keyPath","req","accessType","tasks","transaction","objectStore","add","put","delete","transRead","getAll","stateInit","clear","length","counter","list","regS","RegExp","test","stats","genereteStatistic","filteredTasks","searchedArr","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.2557fc3d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './to-do-list-item.css';\r\n\r\nfunction ToDoListItem(props){\r\n    const{ isDone, isImportant, text,  onItemClick, id, onImportantClick, onDeleteItemClick} = props;\r\n    let classN ='list-group-item ';\r\n        classN += isDone ? ' done ':'';\r\n        classN += isImportant ? ' important ' :'';\r\n        return(\r\n                \r\n            <li className ={classN } >\r\n                <button \r\n                    type=\"button\" \r\n                    className = 'float-right btn btn-outline-danger p-1 ml-2'\r\n                    onClick = {() => onDeleteItemClick(id)}>\r\n                    <i className=\"far fa-trash\"></i>\r\n                </button> \r\n                <button \r\n                    type=\"button\"  \r\n                    className = 'float-right btn btn-outline-warning p-1'\r\n                    onClick = {() => onImportantClick(id)}>\r\n                    <i className=\"far fa-star\"></i>\r\n                </button>\r\n                <span \r\n                    onClick={()=>onItemClick(id)}\r\n                    className =\"d-block\"\r\n                    >{text}</span>    \r\n            </li>\r\n            \r\n           )\r\n}\r\n\r\nexport default ToDoListItem","import ToDoListItem from './to-do-list-item.js';\r\n\r\n\r\nexport default ToDoListItem","import React from 'react';\r\n\r\nimport './to-do-list.css';\r\nimport ToDoListItem from '../to-do-list-item';\r\n\r\nfunction ToDoList(props){\r\n    const{data, onItemClick, onImportantClick, onDeleteItemClick,  }= props;\r\n\r\n    return (\r\n        <ul className = \"toDoList list-group list-group-flush \">\r\n            { data.map(( task ) =>(\r\n                <ToDoListItem\r\n                    key={ task.id }\r\n                    onItemClick = {onItemClick}\r\n                    onImportantClick ={onImportantClick}\r\n                    onDeleteItemClick ={onDeleteItemClick}\r\n                    {...task}\r\n                />\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default ToDoList;","import ToDoList from './to-do-list.js';\r\n\r\nexport default ToDoList","import React from 'react';\r\n\r\nimport './statistic.css';\r\n\r\nfunction Statistic(props){\r\n    const {all, done, mark, onStatClick, filter}= props;\r\n    const progress = {width : \"\"};\r\n\r\n    progress.width =(Number(done)*100)/Number(all) + \"%\"\r\n\r\n    const baseClass = 'badge badge-success mr-1 ';\r\n    const doneClass = `${baseClass} badge-success${filter === 'done'? ' badge-pill ': ''}`;\r\n    const markClass = `${baseClass} badge-danger${filter === 'mark'? ' badge-pill ': ''}`;\r\n    const allClass = `${baseClass} badge-dark${filter === 'all'? ' badge-pill ': ''}`;\r\n    return (\r\n    <div>\r\n        <span \r\n            className ={doneClass}\r\n            role = \"button\"\r\n            onClick={ () => onStatClick('done') }>DONE:{done}</span>\r\n        <span \r\n            className={markClass}\r\n            role = \"button\"\r\n            onClick={ () => onStatClick('mark') }>MARK:{mark}</span>\r\n        <span \r\n            className={allClass}\r\n            role = \"button\"\r\n            onClick={ () => onStatClick('all') }>ALL:{all}</span>\r\n\r\n       \r\n        <div className=\"progress mt-1 mb-1\">\r\n            <div className=\"progress-bar progress-bar-striped bg-warning \" \r\n                style={progress}\r\n                role=\"progressbar\" \r\n                aria-valuenow= {done}\r\n                aria-valuemin=\"0\" \r\n                aria-valuemax={all}/>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Statistic","import Statistic from './statistic.js';\r\n\r\nexport default Statistic","import ToDoForm from './to-do-form.js';\r\n\r\nexport default ToDoForm","import React, { Component } from 'react';\r\n\r\nimport './to-do-form.css';\r\n\r\nexport default class ToDoForm extends Component{\r\n\r\n    state = {\r\n        input : ''\r\n    }\r\n\r\n    onAddTask = () =>{\r\n        this.props.onAddItem(this.state.input);\r\n        this.setState({\r\n            input : ''\r\n        })\r\n        \r\n    }\r\n    \r\n    onInputChange = (ev) =>{\r\n       this.setState({\r\n            input : ev.target.value\r\n       });\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div className=\"input-group mb-3\">\r\n                \r\n            <input \r\n                type=\"text\" \r\n                className=\"form-control \" \r\n                placeholder=\"\" \r\n                aria-label=\"\" \r\n                onChange = { this.onInputChange }\r\n                value = {this.state.input}\r\n                />\r\n            <div className=\"input-group-append\">\r\n                <button \r\n                    className=\"btn btn-outline-secondary\" \r\n                    type=\"button\" \r\n                    onClick= { this.onAddTask }>\r\n                    Add\r\n                </button>\r\n\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\n\r\nimport './search-form.css';\r\n\r\n  function SearchForm(props)  {\r\n    return(\r\n        \r\n        <div className=\"input-group mt-2 mb-2\">\r\n            <div className=\"input-group-prepend\">\r\n                <div className=\"input-group-text\" >\r\n                    <i className=\"fas fa-search\"></i>   \r\n                </div>\r\n            </div>\r\n            <input \r\n                type=\"text\" \r\n                className=\"form-control\"  \r\n                onChange ={props.onSearchInput}\r\n                aria-describedby=\"btnGroupAddon\"/>\r\n        </div>         \r\n        \r\n    )\r\n}\r\n\r\n\r\nexport default  SearchForm \r\n","import React from 'react';\r\n\r\n\r\nfunction ToDoDelete(props){\r\n    return(\r\n       <div className = \"d-flex justify-content-center w-100 m-1\">\r\n            <button \r\n            type=\"button\" \r\n            onClick={props.onDeleteClick} \r\n            className=\"btn btn-danger\">Delete All</button>\r\n        </div>\r\n    )\r\n    }\r\n\r\n\r\nexport default ToDoDelete","import ToDoDelete from \"./to-do-delete.js\";\r\n\r\nexport default ToDoDelete ","import App from './app.js';\r\n\r\nexport default App;","import React, {Component} from 'react';\r\nimport ToDoList from '../to-do-list';\r\nimport Statistic from '../statistic';\r\nimport ToDoForm from '../to-do-form';\r\nimport SearchForm from '../search-form/search-form';\r\nimport ToDoDelete from '../to-do-delete'\r\nimport './app.css';\r\n\r\n\r\nexport default class App extends Component{\r\n    state = {\r\n        maxId : 1,\r\n        todos : [],\r\n        visible : [],\r\n        filter : 'all',\r\n        search : ''\r\n    }\r\n\r\n    db = null;\r\n      \r\n    constructor(props){\r\n        super(props);\r\n        this.dbFirstInit()\r\n        this.dbRead();\r\n    }\r\n\r\n    stateInit(trans){\r\n        trans.onsuccess = ev =>{\r\n            const todos =ev.target.result;\r\n\r\n            const maxId =todos.reduce((max, {id})=>{\r\n                return max > id? max: id;\r\n            }, 1);\r\n\r\n            this.setState({ todos, visible: todos, maxId})\r\n        }\r\n    }\r\n\r\n    dbRead(){\r\n        this.dbOperation('read')\r\n    }\r\n\r\n    dbFirstInit(){\r\n         const req = window.indexedDB.open('tasksBank', 1);\r\n        req.onupgradeneeded = ev =>{\r\n             ev.target.result.createObjectStore('tasks',{\r\n                keyPath : \"id\"\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    dbAdd(item){\r\n        this.dbOperation('create', item);\r\n    }\r\n\r\n    dbUpdate(item){\r\n        this.dbOperation('update', item)\r\n    }\r\n\r\n    dbDelete(id){\r\n        this.dbOperation('delete',id)\r\n    }\r\n\r\n    dbDeleteAll(){\r\n        this.dbOperation('delete-all')\r\n    }\r\n\r\n    dbOperation(type, data){\r\n        const req = window.indexedDB.open('tasksBank', 1);\r\n        const accessType = type === 'read'? 'readonly': 'readwrite';\r\n\r\n        req.onsuccess = () =>{\r\n            const trans = req.result.transaction('tasks', accessType);\r\n            const tasks = trans.objectStore('tasks');\r\n\r\n            switch (type) {\r\n                case \"create\":{\r\n                    tasks.add(data);\r\n                    break;\r\n                }\r\n                case \"update\":{\r\n                    tasks.put(data);\r\n                    break;\r\n                }\r\n                case \"delete\":{\r\n                    tasks.delete(data);\r\n                    break;\r\n                }\r\n                case \"read\":{\r\n                    const transRead = tasks.getAll();\r\n                    this.stateInit(transRead)\r\n                    break;\r\n                }\r\n                case \"delete-all\":{\r\n                    tasks.clear()\r\n                    break;\r\n                }\r\n                default :{\r\n                    console.log('hh');\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onItemClick= id =>{\r\n        const todos2 = [...this.state.todos];\r\n        todos2.forEach(el => {\r\n            if(el.id === id){\r\n                el.isDone = !el.isDone;\r\n                this.dbUpdate(el);\r\n            }\r\n                \r\n            });\r\n        this.setState({ todos : todos2 })\r\n    }\r\n\r\n    onImportantClick= id =>{\r\n        const todos2 = [...this.state.todos];\r\n        todos2.forEach(el => {\r\n            if(el.id === id){\r\n                el.isImportant = !el.isImportant\r\n                this.dbUpdate(el);\r\n            }\r\n        });\r\n        this.setState({ todos : todos2 })\r\n    }\r\n\r\n    onAddItem = (text) =>{\r\n        console.log('add item');\r\n        const todos = [...this.state.todos];\r\n        const item = this.genereteItem(text);\r\n        todos.unshift(item);\r\n        this.dbAdd(item);\r\n        this.setState({todos});\r\n    }\r\n\r\n    genereteItem(text ){\r\n        if( text.length === 0){\r\n            text = ' emply task'\r\n        }\r\n        const id = this.state.maxId + 1;\r\n        this.setState({maxId : id});\r\n        return{\r\n            id,\r\n            text,\r\n            isDone: false,\r\n            isImportant: false\r\n        }\r\n    }\r\n\r\n    onDeleteItemClick = id =>{\r\n        const todos =[...this.state.todos].filter(el => el.id !== id);\r\n        this.setState({todos})\r\n        this.dbDelete(id)\r\n    }\r\n    \r\n    onStatClick = filter => {\r\n        this.setState({ filter })\r\n    }\r\n    filter(){\r\n        const todos = [...this.state.todos];\r\n\r\n        if(this.state.filter === 'all'){\r\n            return todos;\r\n        }\r\n\r\n        if(this.state.filter === 'done'){\r\n            const arrDone = todos.filter(task => task.isDone);\r\n            return arrDone;\r\n        }\r\n\r\n        if(this.state.filter === 'mark'){\r\n            const arrMark = todos.filter(task => task.isImportant);\r\n            return arrMark;\r\n        }\r\n      \r\n    }\r\n\r\n   genereteStatistic(){\r\n       const all = this.state.todos.length;\r\n\r\n       let done = this.state.todos.reduce((counter,{ isDone}) => counter+=isDone? 1: 0, 0);\r\n\r\n       let mark = this.state.todos.reduce((counter,{isImportant}) => counter+=isImportant? 1: 0, 0);\r\n\r\n       return{\r\n           all,\r\n           done,\r\n           mark,\r\n           filter : this.state.filter,\r\n           onStatClick : this.onStatClick\r\n       }\r\n   }\r\n\r\n    search(list){\r\n        if(this.state.search === ''){\r\n            return list;\r\n        }\r\n\r\n        const regS = new RegExp(this.state.search, 'i');\r\n        const searchedArr =list.filter(({ text }) => {\r\n            return regS.test(text);\r\n        });\r\n\r\n        return searchedArr;\r\n    }\r\n\r\n    onSearchInput = ev => {\r\n        this.setState({\r\n           search : ev.target.value\r\n            });\r\n    }\r\n\r\n    onDeleteClick = () => {\r\n        this.setState({\r\n            maxId : 1,\r\n            todos : [],\r\n            filter : 'all',\r\n            search : ''\r\n        })\r\n        this.dbDeleteAll()\r\n    }\r\n\r\n    render(){\r\n        const stats = this.genereteStatistic()\r\n        \r\n        const filteredTasks = this.filter();\r\n\r\n        const searchedArr = this.search(filteredTasks);\r\n\r\n    return(\r\n        <div className =\"app\">\r\n            <Statistic \r\n                {...stats} \r\n            />\r\n           <SearchForm\r\n            onSearchInput = {this.onSearchInput}\r\n           />\r\n\r\n            <ToDoForm\r\n            onAddItem ={this.onAddItem}\r\n            />\r\n            \r\n            <ToDoList \r\n                data ={searchedArr}\r\n                onItemClick = {this.onItemClick}\r\n                onImportantClick ={ this.onImportantClick }\r\n                onDeleteItemClick ={this.onDeleteItemClick}\r\n                />\r\n            <ToDoDelete\r\n            onDeleteClick={this.onDeleteClick}/>\r\n        </div>\r\n\r\n    );\r\n        \r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app';\r\n\r\n\r\n\r\nReactDOM.render(<App/>, document.querySelector('#root'));"],"sourceRoot":""}